{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["import", "@typescript-eslint"],
  "extends": ["eslint:recommended", "plugin:@typescript-eslint/recommended"],
  "rules": {
    "import/order": [
      "error",
      {
        // 並べる順番を下記のように再構成:
        //  1. builtin
        //  2. external
        //  3. type (型専用インポート)
        //  4. parent
        //  5. sibling
        //  6. index
        //  7. internal ← 最後にまとめ、@src をここで最下位に
        "groups": [
          "builtin",
          "external",
          "type",
          "parent",
          "sibling",
          "index",
          "internal"
        ],
        "pathGroups": [
          // ---- MUI は external グループの先頭へ ----
          {
            "pattern": "@mui/**",
            "group": "external",
            "position": "before"
          },
          // ---- ui/shared/** は internal グループの先頭へ ----
          {
            "pattern": "ui/shared/**",
            "group": "internal",
            "position": "before"
          },
          // ---- next/** は external の最後へ ----
          {
            "pattern": "next/**",
            "group": "external",
            "position": "after"
          },
          // ---- @src/** は internal グループの最後へ (プロジェクト内で最終) ----
          {
            "pattern": "@src/**",
            "group": "internal",
            "position": "after"
          }
        ],
        // Node.js組み込み (builtin) は除外
        "pathGroupsExcludedImportTypes": ["builtin"],
        // グループ間で空行を挟む
        "newlines-between": "always",
        // アルファベット順はオフ
        "alphabetical": false
      }
    ],

    // TypeScript の型専用インポートを import type に統一
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": false
      }
    ]
  }
}
